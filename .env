# ------------------------------------------------------------------------------
# CORE SETTINGS
# ------------------------------------------------------------------------------

# SECURITY WARNING: keep the secret key used in production secret!
# Use a tool like https://djecrety.ir/ to generate a new key.
SECRET_KEY=bbe3d85356da3f465367c5ec9852b7513a9f2e4abe10f24e9084442d558352d3c7e442d80d4336398e6edf6ee2f42ef0eeb8a5ebcb308cd8f45aec2f008367d3

# SECURITY WARNING: don't run with debug turned on in production!
# Set to False in production.
DEBUG=False

# Hosts/domain names that are valid for this site.
# Use comma-separated values, e.g., localhost,127.0.0.1,.example.com
ALLOWED_HOSTS=localhost,127.0.0.1

# ------------------------------------------------------------------------------
# DATABASE SETTINGS
# ------------------------------------------------------------------------------

# URL for the database connection.
# For PostgreSQL: postgresql://user:password@host:port/dbname
# For SQLite: sqlite:///db.sqlite3
# In development, you can use SQLite. Production should use PostgreSQL.
DATABASE_URL=postgresql://postgres:postgres@localhost:5432/admin

# ------------------------------------------------------------------------------
# EMAIL SETTINGS (Optional)
# ------------------------------------------------------------------------------
# These settings can be configured via the API as well.
# If set here, they will be used as defaults.

# Use 'django.core.mail.backends.smtp.EmailBackend' for production
# or 'django.core.mail.backends.console.EmailBackend' for development.
EMAIL_BACKEND=django.core.mail.backends.console.EmailBackend
EMAIL_HOST=smtp.gmail.com
EMAIL_PORT=587
EMAIL_USE_TLS=True
EMAIL_HOST_USER=your-email@gmail.com
EMAIL_HOST_PASSWORD=your-app-password
DEFAULT_FROM_EMAIL="Your Name <your-email@gmail.com>"


# ------------------------------------------------------------------------------
# FRONTEND & CORS SETTINGS
# ------------------------------------------------------------------------------

# The origin URLs of your frontend application to allow CORS requests from.
# Use comma-separated values.
CORS_ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000

# ------------------------------------------------------------------------------
# FILE STORAGE SETTINGS (Optional)
# ------------------------------------------------------------------------------
# --- CLOUDFLARE R2 STORAGE (OPTIONAL) ---
# To enable Cloudflare R2 for media file storage, uncomment and fill these variables.
# If these are left commented out, Django will use local file storage.
AWS_STORAGE_BUCKET_NAME=django-admin
AWS_ACCESS_KEY_ID=190264de1838220fa5161c66782b334f
AWS_SECRET_ACCESS_KEY=463479c1312d15e7d61b714bddfb2bf96a81a07e959c24551adf1b0ae20e0314
# This is your R2 S3 API endpoint: https://<account_id>.r2.cloudflarestorage.com
AWS_S3_ENDPOINT_URL=https:https://pub-444aaa31273b45cc8b8a981d5ef2431f.r2.dev
# A custom public domain connected to your R2 bucket (e.g., media.yourdomain.com)
# R2 region can be set to 'auto'
AWS_S3_REGION_NAME=auto
CLOUDFLARE_R2_PUBLIC_DOMAIN=https://pub-444aaa31273b45cc8b8a981d5ef2431f.r2.dev