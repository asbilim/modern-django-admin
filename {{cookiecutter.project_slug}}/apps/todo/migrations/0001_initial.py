# Generated by Django 5.2.3 on 2025-06-12 08:23

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0002_category_description_de_category_description_en_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('name_en', models.CharField(max_length=200, null=True)),
                ('name_de', models.CharField(max_length=200, null=True)),
                ('name_fr', models.CharField(max_length=200, null=True)),
                ('description', models.TextField(blank=True)),
                ('description_en', models.TextField(blank=True, null=True)),
                ('description_de', models.TextField(blank=True, null=True)),
                ('description_fr', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owned_projects', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('title_en', models.CharField(max_length=255, null=True)),
                ('title_de', models.CharField(max_length=255, null=True)),
                ('title_fr', models.CharField(max_length=255, null=True)),
                ('description', models.TextField(blank=True, help_text='A full description of the task.')),
                ('description_en', models.TextField(blank=True, help_text='A full description of the task.', null=True)),
                ('description_de', models.TextField(blank=True, help_text='A full description of the task.', null=True)),
                ('description_fr', models.TextField(blank=True, help_text='A full description of the task.', null=True)),
                ('status', models.CharField(choices=[('todo', 'To Do'), ('in_progress', 'In Progress'), ('done', 'Done'), ('archived', 'Archived')], default='todo', max_length=20)),
                ('status_en', models.CharField(choices=[('todo', 'To Do'), ('in_progress', 'In Progress'), ('done', 'Done'), ('archived', 'Archived')], default='todo', max_length=20, null=True)),
                ('status_de', models.CharField(choices=[('todo', 'To Do'), ('in_progress', 'In Progress'), ('done', 'Done'), ('archived', 'Archived')], default='todo', max_length=20, null=True)),
                ('status_fr', models.CharField(choices=[('todo', 'To Do'), ('in_progress', 'In Progress'), ('done', 'Done'), ('archived', 'Archived')], default='todo', max_length=20, null=True)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('attachment', models.FileField(blank=True, null=True, upload_to='task_attachments/')),
                ('cover_image', models.ImageField(blank=True, null=True, upload_to='task_covers/')),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='JSON metadata for the task (e.g., {"priority": "high", "effort_hours": 2})')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assignee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='todo.project')),
                ('tags', models.ManyToManyField(blank=True, to='core.tag')),
            ],
        ),
    ]
